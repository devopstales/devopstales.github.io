<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rke2 on devopstales</title>
    <link>https://devopstales.github.io/tags/rke2/</link>
    <description>Recent content in Rke2 on devopstales</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://devopstales.github.io/tags/rke2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RKE2 With MetalLB and NGINX Ingress Controller</title>
      <link>https://devopstales.github.io/kubernetes/rke2-ingress-loadbalancer/</link>
      <pubDate>Thu, 15 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/rke2-ingress-loadbalancer/</guid>
      <description>In this Post I will show you how to Configure MetalLB to provide a bare metal Load Balancer for NGINX Ingress Controller.
</description>
      <enclosure url="https://devopstales.github.io/img/metallb2.png" length="18327" type="image/png" />
    </item>
    
    <item>
      <title>RKE2 Image security Admission Controller V3</title>
      <link>https://devopstales.github.io/kubernetes/image-security-admission-controller-v3/</link>
      <pubDate>Mon, 21 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/image-security-admission-controller-v3/</guid>
      <description>In a previous posts we talked about the anchore-image-validator made by Banzaicloud and the admission-controller made by Anchore. In this post I will show you my own admission-controller for image scanning.
</description>
      <enclosure url="https://devopstales.github.io/img/trivy.png" length="16473" type="image/png" />
    </item>
    
    <item>
      <title>Continuous Image Security</title>
      <link>https://devopstales.github.io/kubernetes/continuous-image-security/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/continuous-image-security/</guid>
      <description>In this post I will show you my tool to Continuously scann deployed images in your Kubernetes cluster.
</description>
      <enclosure url="https://devopstales.github.io/img/trivy.png" length="16473" type="image/png" />
    </item>
    
    <item>
      <title>RKE2 Install With Calico</title>
      <link>https://devopstales.github.io/kubernetes/rke2-calico/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/rke2-calico/</guid>
      <description>In this post I will show you how you can install a RKE2 with Calico and encripted VXLAN.
</description>
      <enclosure url="https://devopstales.github.io/img/calico.png" length="34608" type="image/png" />
    </item>
    
    <item>
      <title>RKE2 Install With cilium</title>
      <link>https://devopstales.github.io/kubernetes/rke2-cilium/</link>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/rke2-cilium/</guid>
      <description>In this post I will show you how you can install a RKE2 with cilium and encripted VXLAN.
</description>
      <enclosure url="https://devopstales.github.io/img/cilium.jpg" length="38849" type="image/png" />
    </item>
    
    <item>
      <title>Kubernetes and Vault integration</title>
      <link>https://devopstales.github.io/kubernetes/k8s-vault/</link>
      <pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/k8s-vault/</guid>
      <description>In this post I will show you how you can integrate HashiCorp Vault to Kubernetes easily thanks to Bank-Vaults made by Banzaicloud.
</description>
      <enclosure url="https://devopstales.github.io/img/vault.png" length="9476" type="image/png" />
    </item>
    
    <item>
      <title>RKE2 Image security Admission Controller V2</title>
      <link>https://devopstales.github.io/kubernetes/image-security-admission-controller-v2/</link>
      <pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/image-security-admission-controller-v2/</guid>
      <description>In a previous post we talked about anchore-image-validator made by Banzaicloud. In this post I will show you how I updated that scenario for a real word solution.
</description>
      <enclosure url="https://devopstales.github.io/img/Anchore-K8s.png" length="35443" type="image/png" />
    </item>
    
    <item>
      <title>RKE2 Image security Admission Controller</title>
      <link>https://devopstales.github.io/kubernetes/image-security-admission-controller/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/image-security-admission-controller/</guid>
      <description>In a previous post we talked about Admission Controllers. In this post I will show you how to use an Admission Controller to test image vulnerabilities.
</description>
      <enclosure url="https://devopstales.github.io/img/Anchore-K8s.png" length="35443" type="image/png" />
    </item>
    
    <item>
      <title>RKE2 Pod Security Policy</title>
      <link>https://devopstales.github.io/kubernetes/rke2-pod-security-policy/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/rke2-pod-security-policy/</guid>
      <description>In this post I will show you how you can use Pod Security Policys in RKE2.
</description>
      <enclosure url="https://devopstales.github.io/img/rke2.png" length="5346" type="image/png" />
    </item>
    
    <item>
      <title>RKE2 The Secure Kubernetes Engine</title>
      <link>https://devopstales.github.io/kubernetes/rke2-airgap-install/</link>
      <pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/rke2-airgap-install/</guid>
      <description>In this post I will show you how you can install a secure Kubernetes Engine variant called RKE2 in a Air-Gap environment.
</description>
      <enclosure url="https://devopstales.github.io/img/rke2.png" length="5346" type="image/png" />
    </item>
    
  </channel>
</rss>
