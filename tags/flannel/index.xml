<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>flannel on devopstales</title>
    <link>https://devopstales.github.io/tags/flannel/</link>
    <description>Recent content in flannel on devopstales</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 27 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://devopstales.github.io/tags/flannel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CNI-Genie: network separation with multiple CNI</title>
      <link>https://devopstales.github.io/kubernetes/cni-genie/</link>
      <pubDate>Fri, 27 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/cni-genie/</guid>
      <description>In this post I will show you how you can use CNI-Genie for network separation with multiple CNI.
</description>
      <enclosure url="https://devopstales.github.io/img/cni.png" length="28144" type="image/png" />
    </item>
    
    <item>
      <title>Configurre network wit nmstate operator</title>
      <link>https://devopstales.github.io/kubernetes/multus-nmstate/</link>
      <pubDate>Thu, 14 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/multus-nmstate/</guid>
      <description>In this post I will show you how you can use nmstate operator to manage your network configurations on a Kubernetes host.
</description>
      <enclosure url="https://devopstales.github.io/img/nmstate.png" length="2547" type="image/png" />
    </item>
    
    <item>
      <title>Use Multus CNI in Kubernetes</title>
      <link>https://devopstales.github.io/kubernetes/multus/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/multus/</guid>
      <description>In this post I will show you how you can use Multus CNI to create Kubernetes pods with multiple interfaces.
</description>
      <enclosure url="https://devopstales.github.io/img/multus.png" length="35215" type="image/png" />
    </item>
    
    <item>
      <title>Understanding kubernetes networking: owerlay networks</title>
      <link>https://devopstales.github.io/kubernetes/kubernetes-networking-2/</link>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/kubernetes-networking-2/</guid>
      <description>In my previous posts We check how the pod networking and How Kubernetes use services for loadbalancing. Now we check how the diferente Networking solutions works. How Theas solutins link the kubernetes nodes together.
</description>
      <enclosure url="https://devopstales.github.io/img/k8snet.png" length="8807" type="image/png" />
    </item>
    
    <item>
      <title>Understanding kubernetes networking: pods and services</title>
      <link>https://devopstales.github.io/kubernetes/kubernetes-networking-1/</link>
      <pubDate>Mon, 30 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devopstales.github.io/kubernetes/kubernetes-networking-1/</guid>
      <description>In this series I will attempt to demystify the Kubernetes networkiing layers. This first part will look at containers and pods.
</description>
      <enclosure url="https://devopstales.github.io/img/k8snet.png" length="8807" type="image/png" />
    </item>
    
  </channel>
</rss>
